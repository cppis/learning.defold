local rendercam = require "rendercam.rendercam"
local dirtylarry = require "dirtylarry/dirtylarry"

local node

local unhovercolor = vmath.vector4(1, 1, 1, 0.1)
local hovercolor = vmath.vector4(1, 1, 1, 0.25)


function init(self)
	msg.post(".", "acquire_input_focus")
	node = gui.get_node("node")
	adjust = gui.get_adjust_mode(node)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("set position") then
		gui.set_position(node, rendercam.world_to_screen(message.pos, adjust))
	end
end

function on_input(self, action_id, action)
	--print("action_id: ", action_id)

	if not action_id then
		if gui.pick_node(node, action.x, action.y) then
			gui.set_color(node, hovercolor)
		else
			gui.set_color(node, unhovercolor)
		end
	end

	dirtylarry:button("button_toggle_cam", action_id, action, function ()
		local isCam1 = gui.get_text(gui.get_node("button_toggle_cam/larrylabel")) == "Cam.1" and true or false

		gui.set_text(gui.get_node("button_toggle_cam/larrylabel"), isCam1 and "Cam.2" or "Cam.1")
		
		if true == isCam1 then
			msg.post("/main", "switch cam.2")
		else
			msg.post("/main", "switch cam.1")
		end
		end)
		
	dirtylarry:button("button_toggle_grid", action_id, action, function ()
		local isGridOn = gui.get_text(gui.get_node("button_toggle_grid/larrylabel")) == "Grid On" and true or false

		gui.set_text(gui.get_node("button_toggle_grid/larrylabel"), isGridOn and "Grid Off" or "Grid On")
		
		if true == isGridOn then
			msg.post("/main", "grid off")
		else
			msg.post("/main", "grid on")
		end
	end)
end
